# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml hoho

trigger:
- main

pool: Azure Pipelines

stages: 

- stage: BuildApp
  jobs: 
  - job : BuildTheApplication
    steps:
      -  task: NodeTool@0
         inputs:
            versionSpec: '12.x'
      - task: Npm@1
        inputs:
          command: 'install'
          workingDir: 'app'
      - task: Npm@1
        inputs:
          command: 'custom'
          workingDir: 'app'
          customCommand: 'run build'

- stage: TestTheApplication
  jobs: 
  - job : RunUnitTests
    steps: 
      -  task: NodeTool@0
         inputs:
            versionSpec: '12.x'
      - task: Npm@1
        inputs:
          command: 'install'
          workingDir: 'app'
      - task: Npm@1
        inputs:
          command: 'custom'
          workingDir: 'app'
          customCommand: 'run test --cov'

   
      - task: SonarQubePrepare@5
        inputs:
          SonarQube: 'sonarqube'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'test-coverage'
          cliProjectName: 'test-coverage'
          cliSources: 'app/src'
          extraProperties: |
             Additional properties that will be passed to the scanner, 
             Put one key=value per line, example:
             sonar.exclusions=**/*.bin
             sonar.javascript.lcov.reportPaths=$(Build.SourcesDirectory)/app/coverage/lcov.info
  
      - script: |
          FILTERED_PARAMS=$(echo $SONARQUBE_SCANNER_PARAMS | sed 's/"sonar.branch.name":"[^"]*"\,//g')
          echo "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$FILTERED_PARAMS"
        displayName: Filter out non-CE sonar parameters
      - task: SonarQubeAnalyze@5
        inputs:
          jdkversion: 'JAVA_HOME_11_X64'
    
      - task: SonarQubePublish@5
        inputs:
           pollingTimeoutSec: '300'
  
  
- stage : BuildPushDockerImage
  jobs : 
  - job : BuildPushDockerImage
    steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'DockerHub'
          repository: 'abdelrhmanhamdy/react'
          command: 'buildAndPush'
          Dockerfile: 'app/Dockerfile'
